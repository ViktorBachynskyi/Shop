{"version":3,"sources":["components/Modal/Modal.tsx","components/EditProduct/EditProduct.tsx","components/ProductCard/ProductCard.tsx","components/ProductList/ProductList.tsx","api/products.ts","components/AddProduct/AddProduct.tsx","App.tsx","index.tsx"],"names":["Modal","modalActive","setModalActive","children","className","type","onClick","EditProduct","product","products","setProducts","useState","editingProduct","setEditingProduct","modalEditForm","setModalEditForm","useEffect","inputHander","event","target","name","value","inputSizeHandler","size","placeholder","required","autoComplete","onChange","imageUrl","count","width","height","weight","find","book","id","splice","findIndex","ProductCard","removeProduct","visibleDetails","setVisibleDetails","modalDelete","setModalDelete","src","alt","ProductList","productsFromServer","map","API_URL","getProduct","a","fetch","response","json","addProduct","newProduct","method","body","JSON","stringify","headers","deleteProduct","AddProduct","comments","setNewProduct","modalAddForm","setModalAddForm","Math","random","addNewProduct","preventDefault","onSubmit","App","selectedValue","setSelectedValue","fetchProduct","filter","el","sort","b","localeCompare","filterBySelect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0259dc7a.chunk.js","sourcesContent":["import React from 'react';\nimport './Modal.scss';\n\ntype Props = {\n  modalActive: boolean,\n  setModalActive: (modalActive: boolean) => void,\n};\n\nexport const Modal: React.FC<Props> = ({ modalActive, setModalActive, children }) => {\n  return (\n    <div className={modalActive ? 'modal active' : 'modal'}>\n      <div className={modalActive ? 'modal__content active' : 'modal__content'}>\n        <button\n          type=\"button\"\n          className=\"modal__button-close\"\n          onClick={() => setModalActive(false)}\n        >\n          X\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from '../Modal/Modal';\nimport './EditProduct.scss';\n\ntype Props = {\n  product: Product,\n  products: Product[],\n  setProducts: (book: Product[]) => void,\n};\n\nexport const EditProduct: React.FC<Props> = ({\n  product,\n  products,\n  setProducts,\n}) => {\n  const [editingProduct, setEditingProduct] = useState(product);\n  const [modalEditForm, setModalEditForm] = useState(false);\n\n  useEffect(() => {\n    if (product) {\n      setEditingProduct(product);\n    }\n  }, [product]);\n\n  const inputHander = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEditingProduct({\n      ...editingProduct,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const inputSizeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEditingProduct({\n      ...editingProduct,\n      size: {\n        ...editingProduct.size,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  const editProduct = () => {\n    const index = products.find((book: Product) => book.id === editingProduct.id);\n\n    if (index) {\n      products.splice(products\n        .findIndex((book: Product) => book.id === editingProduct.id), 1, editingProduct);\n\n      setProducts(\n        [...products],\n      );\n    }\n\n    setModalEditForm(false);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => setModalEditForm(true)}\n      >\n        Edit\n      </button>\n      <Modal modalActive={modalEditForm} setModalActive={setModalEditForm}>\n        <form className=\"edit-product-form\">\n          <span className=\"edit-product-form__input-title\">Product Name: </span>\n          <input\n            value={editingProduct.name}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <span className=\"edit-product-form__input-title\">ImageUrl: </span>\n          <input\n            value={editingProduct.imageUrl}\n            name=\"imageUrl\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <span className=\"edit-product-form__input-title\">Count: </span>\n          <input\n            value={editingProduct.count}\n            name=\"count\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <span className=\"edit-product-form__input-title\">Width: </span>\n          <input\n            value={editingProduct.size.width}\n            name=\"width\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputSizeHandler}\n          />\n          <span className=\"edit-product-form__input-title\">Height: </span>\n          <input\n            value={editingProduct.size.height}\n            name=\"height\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputSizeHandler}\n          />\n          <span className=\"edit-product-form__input-title\">Weight: </span>\n          <input\n            value={editingProduct.weight}\n            name=\"weight\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <button\n            type=\"button\"\n            className=\"edit-product-form__button-add\"\n            onClick={editProduct}\n          >\n            Edit\n          </button>\n        </form>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { EditProduct } from '../EditProduct/EditProduct';\nimport { Modal } from '../Modal/Modal';\nimport './ProductCard.scss';\n\ntype Props = {\n  product: Product,\n  removeProduct: (event: React.MouseEvent<HTMLButtonElement>, id: number) => void,\n  products: Product[],\n  setProducts: (product: Product[]) => void,\n};\n\nexport const ProductCard: React.FC<Props> = ({\n  product,\n  removeProduct,\n  products,\n  setProducts,\n}) => {\n  const [visibleDetails, setVisibleDetails] = useState(false);\n  const [modalDelete, setModalDelete] = useState(false);\n\n  const showHideDetails = () => {\n    setVisibleDetails(!visibleDetails);\n  };\n\n  return (\n    <div className=\"product-card\">\n      <div className=\"product-card__content\">\n        <div className=\"product-card__img-container\">\n          <img\n            src={product.imageUrl}\n            alt=\"product img\"\n            className=\"product-card__img\"\n          />\n        </div>\n        <p>\n          {`Product: ${product.name}`}\n        </p>\n        {visibleDetails && (\n          <>\n            <p>{`Count: ${product.count}`}</p>\n            <p>{`Size: ${product.size.width}x${product.size.height}`}</p>\n            <p>{`Weight: ${product.weight}`}</p>\n          </>\n        )}\n        <div className=\"product-card__buttons-container\">\n          <button\n            type=\"button\"\n            onClick={showHideDetails}\n          >\n            Details\n          </button>\n          <EditProduct\n            product={product}\n            products={products}\n            setProducts={setProducts}\n          >\n\n          </EditProduct>\n          <button\n            type=\"button\"\n            onClick={() => setModalDelete(true)}\n          >\n            Delete\n          </button>\n          <Modal modalActive={modalDelete} setModalActive={setModalDelete}>\n            <div className=\"delete-product\">\n              <span className=\"delete-product__title\">You sure you want to delete this product?</span>\n              <div className=\"delete-product__buttons-container\">\n                <button\n                  type=\"button\"\n                  onClick={(event) => removeProduct(event, product.id)}\n                >\n                  Delete\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setModalDelete(false)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport './ProductList.scss';\n\ntype Props = {\n  productsFromServer: Product[],\n  removeProduct: (event: React.MouseEvent<HTMLButtonElement>, id: number) => void,\n  products: Product[],\n  setProducts: (product: Product[]) => void,\n};\n\nexport const ProductList: React.FC<Props> = ({\n  productsFromServer,\n  removeProduct,\n  products,\n  setProducts,\n}) => {\n  return (\n    <ul>\n      {productsFromServer.map(product => (\n        <li key={product.id}>\n          <ProductCard\n            product={product}\n            removeProduct={removeProduct}\n            products={products}\n            setProducts={setProducts}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","const API_URL = 'https://my-json-server.typicode.com/ViktorBachynskyi/json-server/products';\n\nexport async function getProduct(): Promise<Product[]> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nexport async function addProduct(newProduct: Product | null): Promise<Product[]> {\n  const response = await fetch(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(newProduct),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\n\n  return response.json();\n}\n\nexport async function deleteProduct(id: number) {\n  const response = await fetch(`${API_URL}/${id}`, {\n    method: 'DELETE',\n  });\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport { addProduct } from '../../api/products';\nimport { Modal } from '../Modal/Modal';\nimport './AddProduct.scss';\n\ntype Props = {\n  products: Product[],\n  setProducts: (product: Product[]) => void,\n};\n\nexport const AddProduct: React.FC<Props> = ({ products, setProducts }) => {\n  const [newProduct, setNewProduct] = useState({\n    id: 0,\n    imageUrl: '',\n    name: '',\n    count: 0,\n    size: {\n      width: '',\n      height: '',\n    },\n    weight: '',\n    comments: [],\n  });\n  const [modalAddForm, setModalAddForm] = useState(false);\n\n  const clearInputs = () => {\n    setNewProduct({\n      id: 0,\n      imageUrl: '',\n      name: '',\n      count: 0,\n      size: {\n        width: '',\n        height: '',\n      },\n      weight: '',\n      comments: [],\n    });\n  };\n\n  const inputHander = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewProduct({\n      ...newProduct,\n      id: Math.random(),\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const inputSizeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewProduct({\n      ...newProduct,\n      id: Math.random(),\n      size: {\n        ...newProduct.size,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  const addNewProduct = async (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    await addProduct(newProduct);\n\n    setProducts([...products, newProduct]);\n    clearInputs();\n    setModalAddForm(false);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => setModalAddForm(true)}\n      >\n        Add product\n      </button>\n      <Modal modalActive={modalAddForm} setModalActive={setModalAddForm}>\n        <form className=\"add-product-form\" onSubmit={addNewProduct}>\n          <span className=\"add-product-form__input-title\">Product Name: </span>\n          <input\n            value={newProduct.name}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <span className=\"add-product-form__input-title\">ImageUrl: </span>\n          <input\n            value={newProduct.imageUrl}\n            name=\"imageUrl\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <span className=\"add-product-form__input-title\">Count: </span>\n          <input\n            value={newProduct.count}\n            name=\"count\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <span className=\"add-product-form__input-title\">Width: </span>\n          <input\n            value={newProduct.size.width}\n            name=\"width\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputSizeHandler}\n          />\n          <span className=\"add-product-form__input-title\">Height: </span>\n          <input\n            value={newProduct.size.height}\n            name=\"height\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputSizeHandler}\n          />\n          <span className=\"add-product-form__input-title\">Weight: </span>\n          <input\n            value={newProduct.weight}\n            name=\"weight\"\n            type=\"text\"\n            placeholder=\"\"\n            required\n            autoComplete=\"off\"\n            onChange={inputHander}\n          />\n          <button\n            type=\"submit\"\n            className=\"add-product-form__button-add\"\n          >\n            Add\n          </button>\n        </form>\n      </Modal>\n    </>\n  );\n};\n","/* eslint-disable linebreak-style */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport { ProductList } from './components/ProductList/ProductList';\r\nimport { AddProduct } from './components/AddProduct/AddProduct';\r\nimport { deleteProduct, getProduct } from './api/products';\r\n\r\nexport const App: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [selectedValue, setSelectedValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      const productsFromServer = await getProduct();\r\n\r\n      setProducts(productsFromServer);\r\n    };\r\n\r\n    fetchProduct();\r\n  }, []);\r\n\r\n  const changeSelectedValue = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedValue(event.target.value);\r\n  };\r\n\r\n  const removeProduct = async (event: React.MouseEvent<HTMLButtonElement>, id: number) => {\r\n    await deleteProduct(id);\r\n\r\n    setProducts(products.filter(el => el.id !== id));\r\n  };\r\n\r\n  const filterBySelect = () => {\r\n    switch (selectedValue) {\r\n      case 'sortByCount':\r\n        return products.sort((a, b) => b.count - a.count);\r\n\r\n      default:\r\n        return products.sort((a, b) => a.name.localeCompare(b.name));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"shop\">\r\n      <h1 className=\"shop__title\">Shop</h1>\r\n      <h2>List of products</h2>\r\n      <div className=\"shop__control-panel\">\r\n        <form>\r\n          Sort:\r\n          {' '}\r\n          <select\r\n            value={selectedValue}\r\n            onChange={changeSelectedValue}\r\n          >\r\n            <option\r\n              value=\"sortAlphabetically\"\r\n            >\r\n              Alphabetically\r\n            </option>\r\n            <option value=\"sortByCount\">\r\n              By count\r\n            </option>\r\n          </select>\r\n        </form>\r\n        <AddProduct\r\n          products={products}\r\n          setProducts={setProducts}\r\n        />\r\n      </div>\r\n      <ProductList\r\n        productsFromServer={filterBySelect()}\r\n        removeProduct={removeProduct}\r\n        products={products}\r\n        setProducts={setProducts}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}